"""Initial migration

Revision ID: 46c36e0cea4d
Revises: 
Create Date: 2025-03-20 19:29:17.794003

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '46c36e0cea4d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bandwidth_rule')
    op.drop_table('network_adapter')
    op.drop_table('firewall_rule')
    op.drop_table('user')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('barcode_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('mrp', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('selling_price', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('tax_rate', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('discount', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('reorder_point', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('brand', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('weight', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('length', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('width', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('height', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('notes', sa.Text(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_column('notes')
        batch_op.drop_column('height')
        batch_op.drop_column('width')
        batch_op.drop_column('length')
        batch_op.drop_column('weight')
        batch_op.drop_column('brand')
        batch_op.drop_column('category_id')
        batch_op.drop_column('reorder_point')
        batch_op.drop_column('discount')
        batch_op.drop_column('tax_rate')
        batch_op.drop_column('selling_price')
        batch_op.drop_column('mrp')
        batch_op.drop_column('barcode_type')

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.create_table('firewall_rule',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rule_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('protocol', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='firewall_rule_pkey')
    )
    op.create_table('network_adapter',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('adapter_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('adapter_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='network_adapter_pkey')
    )
    op.create_table('bandwidth_rule',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('adapter_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('control_mode', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('upload_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('download_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='bandwidth_rule_pkey')
    )
    # ### end Alembic commands ###
